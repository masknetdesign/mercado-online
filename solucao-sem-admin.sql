-- ========================================
-- SOLU√á√ÉO PARA USU√ÅRIOS SEM PRIVIL√âGIOS DE ADMIN
-- Resolve: ERROR: 42501: must be owner of table objects
-- ========================================

-- IMPORTANTE: Este script √© para usu√°rios SEM privil√©gios de administrador
-- Se voc√™ recebeu o erro "must be owner of table objects", use este script

-- 1. VERIFICAR SEU N√çVEL DE ACESSO
SELECT 
    'VERIFICA√á√ÉO DE PRIVIL√âGIOS' as etapa,
    current_user as seu_usuario,
    session_user as usuario_sessao,
    CASE 
        WHEN current_user = 'postgres' THEN 'üîë ADMINISTRADOR - Pode executar tudo'
        WHEN current_user LIKE '%service_role%' THEN '‚öôÔ∏è SERVICE ROLE - Pode executar a maioria das opera√ß√µes'
        WHEN current_user = 'authenticated' THEN 'üë§ USU√ÅRIO AUTENTICADO - Acesso limitado'
        WHEN current_user = 'anon' THEN 'üîí USU√ÅRIO AN√îNIMO - Acesso muito limitado'
        ELSE '‚ùì USU√ÅRIO DESCONHECIDO - Privil√©gios incertos'
    END as nivel_privilegios,
    now() as verificado_em;

-- 2. VERIFICAR DISPONIBILIDADE DO STORAGE
SELECT 
    'VERIFICA√á√ÉO DO STORAGE' as etapa,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.tables 
            WHERE table_schema = 'storage' AND table_name = 'buckets'
        ) 
        THEN '‚úÖ Storage est√° dispon√≠vel'
        ELSE '‚ùå Storage n√£o est√° dispon√≠vel - Verifique seu plano Supabase'
    END as status_storage;

-- 3. VERIFICAR BUCKETS EXISTENTES (OPERA√á√ÉO SEGURA)
SELECT 
    'BUCKETS EXISTENTES' as etapa,
    id as bucket_id,
    name as bucket_name,
    public as eh_publico,
    file_size_limit as limite_tamanho,
    created_at as criado_em
FROM storage.buckets 
WHERE id = 'produtos-images'
ORDER BY created_at DESC;

-- 4. VERIFICAR SE O BUCKET PRODUTOS-IMAGES EXISTE
SELECT 
    'STATUS DO BUCKET' as etapa,
    CASE 
        WHEN EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'produtos-images') 
        THEN '‚úÖ Bucket produtos-images existe'
        ELSE '‚ùå Bucket produtos-images N√ÉO existe'
    END as status_bucket;

-- 5. VERIFICAR POL√çTICAS RLS ATUAIS (APENAS VISUALIZA√á√ÉO)
SELECT 
    'POL√çTICAS RLS ATUAIS' as etapa,
    COUNT(*) as total_politicas,
    string_agg(policyname, ', ') as nomes_politicas
FROM pg_policies 
WHERE schemaname = 'storage' AND tablename = 'objects';

-- 6. LISTAR POL√çTICAS DETALHADAS (SE EXISTIREM)
SELECT 
    'DETALHES DAS POL√çTICAS' as etapa,
    policyname as nome_politica,
    cmd as tipo_operacao,
    permissive as modo,
    roles as usuarios_permitidos
FROM pg_policies 
WHERE schemaname = 'storage' AND tablename = 'objects'
ORDER BY policyname;

-- 7. TENTAR OPERA√á√ïES B√ÅSICAS (SEM MODIFICAR RLS)
DO $$
BEGIN
    -- Verificar se consegue acessar informa√ß√µes b√°sicas
    PERFORM 1 FROM storage.buckets WHERE id = 'produtos-images';
    RAISE NOTICE '‚úÖ Acesso de leitura aos buckets: OK';
    
    -- Verificar se consegue ver objetos
    PERFORM 1 FROM storage.objects WHERE bucket_id = 'produtos-images' LIMIT 1;
    RAISE NOTICE '‚úÖ Acesso de leitura aos objetos: OK';
    
EXCEPTION
    WHEN insufficient_privilege THEN
        RAISE NOTICE '‚ùå PRIVIL√âGIOS INSUFICIENTES: Voc√™ n√£o pode modificar configura√ß√µes de Storage';
        RAISE NOTICE 'üí° SOLU√á√ïES DISPON√çVEIS:';
        RAISE NOTICE '   1. Pe√ßa ao ADMINISTRADOR do projeto para executar o script completo';
        RAISE NOTICE '   2. Use o MODO DEMO temporariamente para testes';
        RAISE NOTICE '   3. Crie um NOVO PROJETO Supabase (voc√™ ser√° o admin)';
    WHEN OTHERS THEN
        RAISE NOTICE '‚ö†Ô∏è ERRO INESPERADO: %', SQLERRM;
END $$;

-- 8. DIAGN√ìSTICO FINAL E RECOMENDA√á√ïES
SELECT 
    'DIAGN√ìSTICO FINAL' as etapa,
    CASE 
        WHEN current_user = 'postgres' THEN 'EXECUTE O SCRIPT COMPLETO DE RLS'
        WHEN EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'produtos-images' AND public = true) 
        THEN 'BUCKET EXISTE E √â P√öBLICO - PROBLEMA PODE SER NAS POL√çTICAS RLS'
        WHEN EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'produtos-images') 
        THEN 'BUCKET EXISTE MAS PODE N√ÉO SER P√öBLICO'
        ELSE 'BUCKET N√ÉO EXISTE - PRECISA SER CRIADO'
    END as situacao_atual,
    
    CASE 
        WHEN current_user = 'postgres' THEN 'Voc√™ tem privil√©gios de admin - execute solucao-rls-definitiva.sql'
        ELSE 'Voc√™ N√ÉO tem privil√©gios de admin - veja as solu√ß√µes abaixo'
    END as recomendacao;

-- 9. INSTRU√á√ïES ESPEC√çFICAS BASEADAS NO SEU CASO
SELECT '
üéØ SOLU√á√ïES PARA SEU CASO ESPEC√çFICO:

‚ùå PROBLEMA IDENTIFICADO:
‚Üí Erro: "must be owner of table objects"
‚Üí Causa: Voc√™ n√£o tem privil√©gios de administrador no Supabase
‚Üí Resultado: N√£o pode modificar pol√≠ticas RLS diretamente

‚úÖ SOLU√á√ïES DISPON√çVEIS:

1Ô∏è‚É£ PEDIR AJUDA AO ADMINISTRADOR (RECOMENDADO):
   ‚Üí Envie o arquivo "solucao-rls-definitiva.sql" para o administrador
   ‚Üí Pe√ßa para ele executar no SQL Editor do Supabase
   ‚Üí Aguarde a confirma√ß√£o de que foi executado
   ‚Üí Teste o upload ap√≥s a execu√ß√£o

2Ô∏è‚É£ USAR MODO DEMO TEMPOR√ÅRIO:
   ‚Üí Abra o Console do navegador (F12)
   ‚Üí Copie o conte√∫do de "ativar-modo-demo-completo.js"
   ‚Üí Cole no Console e pressione Enter
   ‚Üí O upload funcionar√° offline para testes

3Ô∏è‚É£ CRIAR NOVO PROJETO SUPABASE:
   ‚Üí Acesse: https://supabase.com/dashboard
   ‚Üí Crie um novo projeto (voc√™ ser√° o administrador)
   ‚Üí Configure as credenciais no arquivo supabase.js
   ‚Üí Execute o script completo de RLS

4Ô∏è‚É£ SOLICITAR PRIVIL√âGIOS DE ADMIN:
   ‚Üí Pe√ßa ao propriet√°rio do projeto atual
   ‚Üí Para adicionar voc√™ como administrador
   ‚Üí Depois execute o script completo

üí° VERIFICA√á√ïES ADICIONAIS:
‚Üí Confirme que o Storage est√° habilitado no seu plano
‚Üí Verifique se voc√™ est√° logado com a conta correta
‚Üí Certifique-se de estar no projeto correto do Supabase

üîß PR√ìXIMOS PASSOS IMEDIATOS:
1. Identifique quem √© o administrador do projeto
2. Envie este diagn√≥stico para ele
3. Pe√ßa para executar "solucao-rls-definitiva.sql"
4. Ou use o modo demo para continuar desenvolvendo

‚ö†Ô∏è IMPORTANTE:
‚Üí Este erro √© comum em projetos compartilhados
‚Üí A solu√ß√£o definitiva requer privil√©gios de admin
‚Üí O modo demo √© uma alternativa v√°lida para desenvolvimento
' as instrucoes_detalhadas;

-- 10. INFORMA√á√ïES PARA O ADMINISTRADOR
SELECT '
üìß MENSAGEM PARA ENVIAR AO ADMINISTRADOR:

"Ol√°! Estou com um erro de upload de imagens no projeto Supabase.

ERRO: StorageApiError: new row violates row-level security policy
C√ìDIGO: ERROR: 42501: must be owner of table objects

Preciso que voc√™ execute um script SQL para corrigir as pol√≠ticas RLS.

ARQUIVO: solucao-rls-definitiva.sql
LOCAL: SQL Editor do Supabase Dashboard

O script vai:
‚úÖ Remover pol√≠ticas RLS conflitantes
‚úÖ Reconfigurar o bucket produtos-images
‚úÖ Criar pol√≠ticas permissivas para upload
‚úÖ Resolver o erro definitivamente

Por favor, execute quando poss√≠vel. Obrigado!"

üìã CHECKLIST PARA O ADMINISTRADOR:
‚ñ° Fazer backup das configura√ß√µes atuais (opcional)
‚ñ° Acessar Supabase Dashboard como admin
‚ñ° Ir para SQL Editor
‚ñ° Copiar e colar o script "solucao-rls-definitiva.sql"
‚ñ° Executar o script completo
‚ñ° Verificar se n√£o houve erros
‚ñ° Confirmar que as pol√≠ticas foram criadas
‚ñ° Informar que foi conclu√≠do
' as mensagem_admin;

-- 11. LOG FINAL
SELECT 
    'üìä RESUMO DA VERIFICA√á√ÉO' as titulo,
    current_user as usuario_atual,
    CASE WHEN current_user = 'postgres' THEN 'ADMIN' ELSE 'N√ÉO-ADMIN' END as tipo_usuario,
    (SELECT COUNT(*) FROM storage.buckets WHERE id = 'produtos-images') as bucket_existe,
    (SELECT COUNT(*) FROM pg_policies WHERE schemaname = 'storage' AND tablename = 'objects') as politicas_rls,
    now() as diagnostico_em;