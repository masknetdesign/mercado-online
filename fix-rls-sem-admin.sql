-- ========================================
-- SCRIPT ALTERNATIVO PARA CORRIGIR RLS SEM PRIVIL√âGIOS DE ADMIN
-- Para quando voc√™ recebe: ERROR: 42501: must be owner of table objects
-- ========================================

-- IMPORTANTE: Este script deve ser executado por um SUPER ADMIN do projeto Supabase
-- Se voc√™ n√£o √© o owner do projeto, pe√ßa para o administrador executar

-- 1. VERIFICAR PERMISS√ïES ATUAIS
SELECT 
    current_user as usuario_atual,
    session_user as sessao_usuario,
    CASE 
        WHEN current_user = 'postgres' THEN '‚úÖ Super Admin (postgres)'
        WHEN current_user LIKE '%service_role%' THEN '‚úÖ Service Role'
        WHEN current_user LIKE '%anon%' THEN '‚ùå Usu√°rio an√¥nimo - Sem privil√©gios'
        WHEN current_user LIKE '%authenticated%' THEN '‚ö†Ô∏è Usu√°rio autenticado - Privil√©gios limitados'
        ELSE '‚ùì Usu√°rio: ' || current_user
    END as nivel_permissao;

-- 2. VERIFICAR SE O STORAGE EST√Å HABILITADO
SELECT 
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'storage' AND table_name = 'buckets') 
        THEN '‚úÖ Storage est√° habilitado' 
        ELSE '‚ùå Storage N√ÉO est√° habilitado'
    END as status_storage;

-- 3. VERIFICAR BUCKET EXISTENTE
SELECT 
    name as bucket_name,
    public as publico,
    created_at as criado_em
FROM storage.buckets 
WHERE name = 'produtos-images';

-- 4. CRIAR BUCKET SE N√ÉO EXISTIR (sem conflito)
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM storage.buckets WHERE id = 'produtos-images') THEN
        INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
        VALUES (
            'produtos-images',
            'produtos-images',
            true,
            52428800, -- 50MB
            ARRAY['image/jpeg', 'image/png', 'image/webp', 'image/gif']
        );
        RAISE NOTICE '‚úÖ Bucket produtos-images criado com sucesso';
    ELSE
        RAISE NOTICE '‚úÖ Bucket produtos-images j√° existe';
    END IF;
END $$;

-- 5. VERIFICAR POL√çTICAS EXISTENTES
SELECT 
    policyname as politica,
    cmd as comando,
    CASE 
        WHEN qual IS NOT NULL THEN 'Com condi√ß√µes'
        ELSE 'Sem condi√ß√µes'
    END as status
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
ORDER BY policyname;

-- 6. SCRIPT PARA SUPER ADMIN EXECUTAR
-- (Copie este bloco e pe√ßa para o administrador do projeto executar)

/*
-- ===== IN√çCIO DO SCRIPT PARA SUPER ADMIN =====

-- Remover pol√≠ticas conflitantes
DROP POLICY IF EXISTS "produtos_images_select_all" ON storage.objects;
DROP POLICY IF EXISTS "produtos_images_insert_all" ON storage.objects;
DROP POLICY IF EXISTS "produtos_images_update_all" ON storage.objects;
DROP POLICY IF EXISTS "produtos_images_delete_all" ON storage.objects;
DROP POLICY IF EXISTS "Allow public read" ON storage.objects;
DROP POLICY IF EXISTS "Allow public insert" ON storage.objects;
DROP POLICY IF EXISTS "Allow public update" ON storage.objects;
DROP POLICY IF EXISTS "Allow public delete" ON storage.objects;

-- Criar pol√≠ticas permissivas para produtos-images
CREATE POLICY "produtos_images_select_all"
ON storage.objects
FOR SELECT
USING (bucket_id = 'produtos-images');

CREATE POLICY "produtos_images_insert_all"
ON storage.objects
FOR INSERT
WITH CHECK (bucket_id = 'produtos-images');

CREATE POLICY "produtos_images_update_all"
ON storage.objects
FOR UPDATE
USING (bucket_id = 'produtos-images')
WITH CHECK (bucket_id = 'produtos-images');

CREATE POLICY "produtos_images_delete_all"
ON storage.objects
FOR DELETE
USING (bucket_id = 'produtos-images');

-- Habilitar RLS
ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

-- ===== FIM DO SCRIPT PARA SUPER ADMIN =====
*/

-- 7. VERIFICA√á√ÉO FINAL (voc√™ pode executar)
SELECT 
    '‚úÖ Verifica√ß√£o conclu√≠da' as status,
    COUNT(*) as total_policies
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
AND policyname LIKE '%produtos_images%';

-- 8. INSTRU√á√ïES ALTERNATIVAS
SELECT '
üîß SOLU√á√ïES ALTERNATIVAS:

1. PEDIR PARA O ADMIN DO PROJETO:
   - Copie o bloco "SCRIPT PARA SUPER ADMIN" acima
   - Envie para quem criou o projeto Supabase
   - Pe√ßa para executar no SQL Editor

2. USAR MODO DEMO TEMPOR√ÅRIO:
   - Abra: assets/js/supabase.js
   - Mude: isDemoMode: true
   - Teste o upload (funcionar√° offline)

3. RECRIAR PROJETO SUPABASE:
   - Crie um novo projeto onde voc√™ seja o owner
   - Configure as credenciais no supabase.js
   - Execute o script de corre√ß√£o

4. VERIFICAR PLANO SUPABASE:
   - Alguns planos n√£o incluem Storage
   - Verifique em: Settings > Billing
' as instrucoes;

-- 9. TESTE DE CONEX√ÉO B√ÅSICA
SELECT 
    current_timestamp as horario_teste,
    version() as versao_postgresql,
    current_database() as banco_atual;