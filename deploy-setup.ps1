# Script PowerShell para Deploy Autom√°tico - Mercado Online
# Execute este script para configurar o deploy no GitHub + Netlify

Write-Host "üöÄ MERCADO ONLINE - SETUP DE DEPLOY" -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se Git est√° instalado
Write-Host "üìã Verificando pr√©-requisitos..." -ForegroundColor Yellow

try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git encontrado: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git n√£o encontrado. Instale o Git primeiro: https://git-scm.com" -ForegroundColor Red
    exit 1
}

# Verificar se estamos na pasta correta
if (-not (Test-Path "netlify.toml")) {
    Write-Host "‚ùå Arquivo netlify.toml n√£o encontrado. Execute este script na pasta raiz do projeto." -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Pasta do projeto confirmada" -ForegroundColor Green
Write-Host ""

# Solicitar informa√ß√µes do usu√°rio
Write-Host "üìù Configura√ß√£o do reposit√≥rio:" -ForegroundColor Yellow
$githubUser = Read-Host "Digite seu username do GitHub"
$repoName = Read-Host "Digite o nome do reposit√≥rio (padr√£o: mercado-online)"

if ([string]::IsNullOrWhiteSpace($repoName)) {
    $repoName = "mercado-online"
}

$repoUrl = "https://github.com/$githubUser/$repoName.git"

Write-Host ""
Write-Host "üìä Resumo da configura√ß√£o:" -ForegroundColor Cyan
Write-Host "GitHub User: $githubUser" -ForegroundColor White
Write-Host "Reposit√≥rio: $repoName" -ForegroundColor White
Write-Host "URL: $repoUrl" -ForegroundColor White
Write-Host ""

$confirm = Read-Host "Confirma as informa√ß√µes? (s/n)"
if ($confirm -ne "s" -and $confirm -ne "S") {
    Write-Host "‚ùå Opera√ß√£o cancelada pelo usu√°rio." -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üîß Iniciando configura√ß√£o do Git..." -ForegroundColor Yellow

# Verificar se j√° √© um reposit√≥rio Git
if (Test-Path ".git") {
    Write-Host "üìÅ Reposit√≥rio Git j√° existe. Verificando status..." -ForegroundColor Yellow
    
    # Verificar se h√° mudan√ßas n√£o commitadas
    $status = git status --porcelain
    if ($status) {
        Write-Host "üìù H√° altera√ß√µes n√£o commitadas. Fazendo commit..." -ForegroundColor Yellow
        git add .
        git commit -m "Update: Prepara√ß√£o para deploy"
    }
    
    # Verificar se j√° tem origin
    $remotes = git remote -v
    if ($remotes -match "origin") {
        Write-Host "üîó Remote origin j√° configurado. Atualizando..." -ForegroundColor Yellow
        git remote set-url origin $repoUrl
    } else {
        Write-Host "üîó Adicionando remote origin..." -ForegroundColor Yellow
        git remote add origin $repoUrl
    }
} else {
    Write-Host "üÜï Inicializando novo reposit√≥rio Git..." -ForegroundColor Yellow
    
    # Inicializar reposit√≥rio
    git init
    
    # Adicionar todos os arquivos
    Write-Host "üìÅ Adicionando arquivos ao reposit√≥rio..." -ForegroundColor Yellow
    git add .
    
    # Fazer primeiro commit
    Write-Host "üíæ Fazendo commit inicial..." -ForegroundColor Yellow
    git commit -m "Initial commit: Mercado Online - Aplicativo completo para mercados e mercearias"
    
    # Adicionar remote origin
    Write-Host "üîó Configurando remote origin..." -ForegroundColor Yellow
    
    # Verificar se o remote j√° existe
    $remoteExists = git remote get-url origin 2>$null
    if ($remoteExists) {
        Write-Host "Remote origin j√° existe. Atualizando URL..." -ForegroundColor Yellow
        git remote set-url origin $repoUrl
        Write-Host "‚úì Remote origin atualizado" -ForegroundColor Green
    } else {
        try {
            git remote add origin $repoUrl
            Write-Host "‚úì Remote origin configurado" -ForegroundColor Green
        } catch {
            Write-Host "‚ö† Erro ao configurar remote origin: $_" -ForegroundColor Red
        }
    }
    
    # Verificar configura√ß√£o
    Write-Host "Verificando configura√ß√£o do remote..." -ForegroundColor Cyan
    git remote -v
}

# Configurar branch principal
Write-Host "üåø Configurando branch principal..." -ForegroundColor Yellow
git branch -M main

# Fazer push para GitHub
Write-Host "üì§ Enviando c√≥digo para GitHub..." -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  Voc√™ precisar√° fazer login no GitHub quando solicitado." -ForegroundColor Yellow
Write-Host ""

try {
    git push -u origin main
    Write-Host "‚úÖ C√≥digo enviado com sucesso para GitHub!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao enviar para GitHub. Verifique:" -ForegroundColor Red
    Write-Host "   - Se o reposit√≥rio existe no GitHub" -ForegroundColor Red
    Write-Host "   - Se voc√™ tem permiss√£o de escrita" -ForegroundColor Red
    Write-Host "   - Se suas credenciais est√£o corretas" -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° Crie o reposit√≥rio manualmente em: https://github.com/new" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üéâ CONFIGURA√á√ÉO CONCLU√çDA COM SUCESSO!" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "1. Acesse: https://netlify.com" -ForegroundColor White
Write-Host "2. Clique em 'Add new site' ‚Üí 'Import an existing project'" -ForegroundColor White
Write-Host "3. Conecte com GitHub e selecione: $repoName" -ForegroundColor White
Write-Host "4. Clique em 'Deploy site'" -ForegroundColor White
Write-Host ""
Write-Host "üîó Links importantes:" -ForegroundColor Cyan
Write-Host "GitHub: https://github.com/$githubUser/$repoName" -ForegroundColor White
Write-Host "Netlify: https://app.netlify.com/" -ForegroundColor White
Write-Host ""
Write-Host "üìñ Guia completo: Consulte DEPLOY-NETLIFY-GITHUB.md" -ForegroundColor Yellow
Write-Host ""

# Perguntar se quer abrir os links
$openLinks = Read-Host "Deseja abrir os links no navegador? (s/n)"
if ($openLinks -eq "s" -or $openLinks -eq "S") {
    Start-Process "https://github.com/$githubUser/$repoName"
    Start-Process "https://app.netlify.com/"
    Write-Host "üåê Links abertos no navegador!" -ForegroundColor Green
}

Write-Host ""
Write-Host "‚ú® Deploy configurado com sucesso! Boa sorte com seu Mercado Online!" -ForegroundColor Green
Write-Host ""

# Pausar para o usu√°rio ler
Read-Host "Pressione Enter para finalizar"